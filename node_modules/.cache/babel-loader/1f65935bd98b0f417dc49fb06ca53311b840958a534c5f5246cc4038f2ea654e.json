{"ast":null,"code":"var _jsxFileName = \"/Users/nolanrook/Documents/logopedica-chatbot-frontend/src/components/Chatbot.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Drawer, DrawerClose, DrawerContent, DrawerDescription, DrawerFooter, DrawerHeader, DrawerTitle, DrawerTrigger } from \"./ui/drawer\";\nimport { Button } from \"./ui/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async message => {\n    try {\n      const response = await fetch('/chat/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      // Update messages state with user message and bot response\n      setMessages([...messages, {\n        user: message\n      }, {\n        bot: data.response\n      }]);\n    } catch (error) {\n      console.error('There has been a problem with your fetch operation:', error);\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      const input = event.currentTarget;\n      handleSendMessage(input.value);\n      input.value = ''; // Clear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      isOpen: isDrawerOpen,\n      children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerTitle, {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerClose, {\n          onClick: () => setIsDrawerOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerDescription, {\n          children: \"This is your friendly chatbot!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DrawerFooter, {\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [msg.user && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"User: \", msg.user]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 46\n            }, this), msg.bot && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Bot: \", msg.bot]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DrawerTrigger, {\n      onClick: () => setIsDrawerOpen(true),\n      children: \"Open Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setIsDrawerOpen(false),\n      children: \"Close Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"Bf8gjylUZRdoaL/pUc5PZFRhosQ=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","Drawer","DrawerClose","DrawerContent","DrawerDescription","DrawerFooter","DrawerHeader","DrawerTitle","DrawerTrigger","Button","jsxDEV","_jsxDEV","Chatbot","_s","isDrawerOpen","setIsDrawerOpen","messages","setMessages","handleSendMessage","message","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","user","bot","error","console","handleKeyDown","event","key","input","currentTarget","value","children","isOpen","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","type","onKeyDown","_c","$RefreshReg$"],"sources":["/Users/nolanrook/Documents/logopedica-chatbot-frontend/src/components/Chatbot.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent } from 'react';\nimport {\n    Drawer,\n    DrawerClose,\n    DrawerContent,\n    DrawerDescription,\n    DrawerFooter,\n    DrawerHeader,\n    DrawerTitle,\n    DrawerTrigger,\n} from \"./ui/drawer\";\nimport { Button } from \"./ui/button\";\n\ninterface Message {\n    user?: string;\n    bot?: string;\n}\n\nconst Chatbot = () => {\n    const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n    const [messages, setMessages] = useState<Message[]>([]);\n\n    const handleSendMessage = async (message: string) => {\n        try {\n            const response = await fetch('/chat/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            // Update messages state with user message and bot response\n            setMessages([...messages, { user: message }, { bot: data.response }]);\n        } catch (error) {\n            console.error('There has been a problem with your fetch operation:', error);\n        }\n    };\n\n    const handleKeyDown = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            const input = event.currentTarget;\n            handleSendMessage(input.value);\n            input.value = ''; // Clear input after sending\n        }\n    };\n\n    return (\n        <div>\n            <Drawer isOpen={isDrawerOpen}>\n                <DrawerHeader>\n                    <DrawerTitle>Chatbot</DrawerTitle>\n                    <DrawerClose onClick={() => setIsDrawerOpen(false)} />\n                </DrawerHeader>\n                <DrawerContent>\n                    <DrawerDescription>This is your friendly chatbot!</DrawerDescription>\n                    <DrawerFooter>\n                        {/* Chat messages */}\n                        {messages.map((msg, index) => (\n                            <div key={index}>\n                                {msg.user && <div>User: {msg.user}</div>}\n                                {msg.bot && <div>Bot: {msg.bot}</div>}\n                            </div>\n                        ))}\n                    </DrawerFooter>\n                </DrawerContent>\n            </Drawer>\n            <DrawerTrigger onClick={() => setIsDrawerOpen(true)}>Open Chatbot</DrawerTrigger>\n            <input type=\"text\" onKeyDown={handleKeyDown} />\n            <Button onClick={() => setIsDrawerOpen(false)}>Close Chatbot</Button>\n        </div>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}